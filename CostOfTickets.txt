// Time Complexity o(n) Space complexity o(n)
class Solution {
    public int mincostTickets(int[] days, int[] costs) {
       int max= Integer.MIN_VALUE;
       HashSet<Integer> s = new HashSet<>();
       for(int i=0;i<days.length;i++){
           s.add(days[i]);
           if(days[i]>max) max=days[i];

       } 
       int[] dp = new int[max+1];
       dp[0]=0;
       for(int i=1;i<=max;i++){
           if(!s.contains(i)){
               dp[i] = dp[i-1];
           }
           else{
               dp[i] = Math.min(dp[i-1]+costs[0],Math.min(costs[1]+dp[Math.max(0,i-7)],costs[2]+dp[Math.max(0,i-30)]));
           }
       }
return dp[max];
    }

}